@using CundecinosWeb.ViewModel;
@model vChat
@{
    string style = "";
}
<!--begin::Post-->
<div class="post d-flex flex-column-fluid" id="kt_post">
    <!--begin::Container-->
    <div id="kt_content_container" class="container">
        <!--begin::Layout-->
        <div class="d-flex flex-column flex-lg-row">
            <!--begin::Sidebar-->
            <div class="flex-column flex-lg-row-auto w-100 w-lg-300px w-xl-400px mb-10 mb-lg-0">
                <!--begin::Contacts-->
                <div class="card card-flush">
                    <!--begin::Card header-->
                    <div class="card-header pt-7" id="kt_chat_contacts_header">
                        <!--begin::Form-->
                        <form class="w-100 position-relative" autocomplete="off">
                            <!--begin::Icon-->
                            <!--begin::Svg Icon | path: icons/duotone/General/Search.svg-->
                            <span class="svg-icon svg-icon-2 svg-icon-lg-1 svg-icon-gray-500 position-absolute top-50 ms-5 translate-middle-y">
                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                        <rect x="0" y="0" width="24" height="24" />
                                        <path d="M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                                        <path d="M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z" fill="#000000" fill-rule="nonzero" />
                                    </g>
                                </svg>
                            </span>
                            <!--end::Svg Icon-->
                            <!--end::Icon-->
                            <!--begin::Input-->
                            <input type="text" class="form-control form-control-solid px-15" name="search" value="" placeholder="Buscar por usuario o email..." />
                            <!--end::Input-->
                        </form>
                        <!--end::Form-->
                    </div>
                    <!--end::Card header-->
                    @if (Model.PeopleWritten.Count() > 0)
                    {
                        <p class="fw-bold mt-3 mb-0 text-center">Tiene @Model.PeopleWritten.Count() mensaje(s) nuevo</p>
                    }
                    <!--begin::Card body-->
                    <div class="card-body pt-5" id="kt_chat_contacts_body">
                        <!--begin::List-->
                        <div class="scroll-y me-n5 pe-5 h-200px h-lg-auto" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_header, #kt_toolbar, #kt_footer, #kt_chat_contacts_header" data-kt-scroll-wrappers="#kt_content, #kt_chat_contacts_body" data-kt-scroll-offset="0px">

                            @foreach (var item in Model.People)
                            {
                                @if (Model.PeopleWritten.Find(x=>x.UID == item.UID) != null)
                                {
                                    style = "background: #F2F4F4;border-radius: 20px;padding-inline-start: 3px;";
                                }
                                else
                                {
                                    style = "";
                                }
                                <a asp-controller="Chat" asp-action="ChatUser" asp-route-id="@item.UID">

                                    <div class="d-flex flex-stack py-4 justify-content-start" style="@style">
                                        <!--begin::Details-->
                                        <div class="d-flex align-items-center">
                                            <!--begin::Avatar-->
                                            <div class="symbol symbol-45px symbol-circle">
                                                <img alt="Pic" src="@item.AvatarUrl" />
                                            </div>
                                            <!--end::Avatar-->
                                            <!--begin::Details-->
                                            <div class="ms-5">
                                                <a asp-controller="Chat" asp-action="ChatUser" asp-route-id="@item.UID"  class="fs-5 fw-bolder text-gray-900 text-hover-primary mb-2" id="boton02">@item.FirstName @item.LastName</a>
                                                <div class="fw-bold text-gray-400">@item.Email</div>
                                                <input type="hidden" id="OrigeID" value="@item.UID">
                                            </div>
                                            <!--end::Details-->
                                        </div>
                                        <!--end::Details-->
                                        @if (Model.PeopleWritten.Find(x => x.UID == item.UID) != null)
                                        {
                                            <span class="badge badge-pill badge-danger rounded-circle me-5 ms-auto px-2 py-2">@Model.PeopleWritten.Where(x=>x.UID == item.UID).Count()</span>
                                        }
                                    </div>

                                </a>
                            }
                            <!--end::User-->
                            <!--begin::Separator-->
                            <div class="separator separator-dashed d-none"></div>





                        </div>
                        <!--end::List-->
                    </div>
                    <!--end::Card body-->
                </div>
                <!--end::Contacts-->
            </div>
            <!--end::Sidebar-->
            <div class="col-lg-6">
                <img src="~/images/web.svg" alt="">
                @*<div class="left-image">
                </div>*@
            </div>
        </div>
        <!--end::Layout-->
    </div>
    <!--end::Container-->
</div>
<!--end::Post-->

<script type="text/javascript">
    $(document).ready(function () {
        $("#boton02").click(function () {

            $("#userInput").val($("#OrigeID").val());
            $("#messageInput").val("")

        });
        // Obtener el elemento de entrada de texto
        const inputBusqueda = $('[name="search"]')[0];
        // Agregar un evento keyup al elemento de entrada de texto
        inputBusqueda.addEventListener("keyup", function (event) {
            const buscar = event.target.value;
            if ((buscar.trim() !== '' && buscar.trim().length + 5 > buscar.length) || (buscar.trim() === '' && buscar.length < 3)) {
                busqueda(buscar.trim());
            }
            else {
                event.target.value = buscar.trim() !== '' ? buscar.trim() : '';
            }
        });

    });


    function busqueda(cadena) {
        const emailUsuarioBuscado = cadena; // Valor de búsqueda, podría ser un valor ingresado por el usuario
        const url = `/GetSearch?consulta=${encodeURIComponent(emailUsuarioBuscado)}`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    console.log(data);
                    const contenedor = document.querySelector('#kt_chat_contacts_body > div'); //contenedor principal
                    contenedor.innerHTML = "";
                    data.forEach(x => {
                        // Crear un div
                        const div = document.createElement("div");
                        div.classList.add("d-flex", "flex-stack", "py-4");
                        // Crear un div para la imagen
                        const divImagen = document.createElement("div");
                        divImagen.classList.add("symbol", "symbol-45px", "symbol-circle");
                        // Crear una imagen
                        const imagen = document.createElement("img");
                        imagen.setAttribute("alt", "Pic");
                        imagen.setAttribute("src", x.AvatarUrl);
                        // Agregar la imagen al div de la imagen
                        divImagen.appendChild(imagen);
                        // Crear un div para el contenido de texto
                        const divTexto = document.createElement("div");
                        divTexto.classList.add("ms-5");
                        // Crear un enlace
                        const enlace = document.createElement("a");
                        enlace.classList.add("fs-5", "fw-bolder", "text-gray-900", "text-hover-primary", "mb-2");
                        enlace.setAttribute("href", `/Chat/ChatUser/${x.UID}`);
                        enlace.textContent = x.FullName;
                        // Agregar el enlace al div de texto
                        divTexto.appendChild(enlace);
                        // Crear un div para el correo electrónico
                        const divEmail = document.createElement("div");
                        divEmail.classList.add("fw-bold", "text-gray-400");
                        divEmail.textContent = x.Email;
                        // Agregar el div del correo electrónico al div de texto
                        divTexto.appendChild(divEmail);
                        //div que agrupa todos los campos
                        const divSecundario = document.createElement("div");
                        divSecundario.classList.add("d-flex", "align-items-center");
                        // Agregar el div de la imagen y el div de texto al div secundario
                        divSecundario.appendChild(divImagen);
                        divSecundario.appendChild(divTexto);
                        //agregar al div principal
                        div.appendChild(divSecundario);
                        // Crear un enlace
                        const enlace2 = document.createElement("a");
                        enlace2.setAttribute("href", `/Chat/ChatUser/${x.UID}`);
                        enlace2.appendChild(div);
                        // Agregar un separador
                        const separador = document.createElement("div");
                        separador.classList.add("separator", "separator-dashed", "d-none");
                        // Agregar el div principal y el separador al contenedor
                        contenedor.appendChild(enlace2);
                        contenedor.appendChild(separador);
                    })
                } else {
                    console.log("No se encontraron usuarios.");
                }
            })
            .catch(error => console.error(error));
    }
</script>




@model List<CundecinosWeb.Models.Publication>

@{
	var extensions = ViewBag.Extensions;
	var collegeCareers = ViewBag.CollegeCareers;

	}
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
	<!--begin::Toolbar-->
	<div class="toolbar" id="kt_toolbar">
		<!--begin::Container-->
		<div id="kt_toolbar_container" class="container-fluid d-flex flex-stack">
			<!--begin::Page title-->
			<div data-kt-swapper="true" data-kt-swapper-mode="prepend" data-kt-swapper-parent="{default: '#kt_content_container', 'lg': '#kt_toolbar_container'}" class="page-title d-flex align-items-center flex-wrap me-3 mb-5 mb-lg-0">
				<!--begin::Title-->
				<h1 class="d-flex align-items-center text-dark fw-bolder fs-3 my-1">Reporte Cundecinos</h1>
				<!--end::Title-->
				<!--end::Separator-->
				<!--begin::Breadcrumb-->
				
				<!--end::Breadcrumb-->
			</div>
			<!--end::Page title-->
			<!--begin::Actions-->
			<div class="d-flex align-items-center py-1">
				
			</div>
			<!--end::Actions-->
		</div>
		<!--end::Container-->
	</div>
	<!--end::Toolbar-->
	<!--begin::Post-->
	<div class="post d-flex flex-column-fluid" id="kt_post">
		<!--begin::Container-->
		<div id="kt_content_container" class="container-xxl">
			<!--begin::Row-->
			<div class="row g-5 g-xl-8">
				<div class="col-xl-6">
					<!--begin::Charts Widget 1-->
					<div class="card card-xl-stretch mb-xl-8">
						<!--begin::Header-->
						<div class="card-header border-0 pt-5">
							<!--begin::Title-->
							<h3 class="card-title align-items-start flex-column">
								<span class="card-label fw-bolder fs-3 mb-1">Publicaciones por mes</span>
							</h3>
							<!--end::Title-->
						</div>
						<!--end::Header-->
						<!--begin::Body-->
						<div class="card-body">
							<!--begin::Chart-->
							<div id="chart_1" style="height: 350px"></div>
							<!--end::Chart-->
						</div>
						<!--end::Body-->
					</div>
					<!--end::Charts Widget 1-->
				</div>
				<div class="col-xl-6">
					<!--begin::Charts Widget 2-->
					<div class="card card-xl-stretch mb-5 mb-xl-8">
						<!--begin::Header-->
						<div class="card-header border-0 pt-5">
							<h3 class="card-title align-items-start flex-column">
								<span class="card-label fw-bolder fs-3 mb-1">Publicaciones por carrera</span>
							</h3>
						</div>
						<!--end::Header-->
						<!--begin::Body-->
						<div class="card-body">
							<!--begin::Chart-->
							<div id="chart_2" style="height: 350px"></div>
							<!--end::Chart-->
						</div>
						<!--end::Body-->
					</div>
					<!--end::Charts Widget 2-->
				</div>
			</div>
			<!--end::Row-->
			<!--begin::Row-->
			<div class="row g-5 g-xl-8">
				<div class="col-xl-12">
					<!--begin::Charts Widget 3-->
					<div class="card card-xl-stretch mb-xl-8">
						<!--begin::Header-->
						<div class="card-header border-0 pt-5">
							<h3 class="card-title align-items-start flex-column">
								<span class="card-label fw-bolder fs-3 mb-1">Publicaciones por sede/extensión</span>
							</h3>
						</div>
						<!--end::Header-->
						<!--begin::Body-->
						<div class="card-body">
							<!--begin::Chart-->
							<div id="chart_3" style="height: 350px"></div>
							<!--end::Chart-->
						</div>
						<!--end::Body-->
					</div>
					<!--end::Charts Widget 3-->
				</div>
			</div>
			<!--end::Row-->
		</div>
		<!--end::Container-->
	</div>
	<!--end::Post-->
</div>
<script>
	$(document).ready(function () {
		graficaPublicaciones();
	});
	function graficaPublicaciones()
	{
		$.ajax({
			url: '/APIReport/PublicationReport',
			method: 'GET',
			success: function (data) {
				var counts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
				data.forEach(x => {
					var objetoFecha = new Date(x.PublicationDate);
					var mes = objetoFecha.getMonth();
					counts[mes]++;
				});
				var options = {
					series: [{
						name: 'publicaciones',
						data: counts
					}],
					chart: {
						type: 'bar',
						height: 350
					},
					plotOptions: {
						bar: {
							horizontal: false,
							columnWidth: '55%',
							endingShape: 'rounded'
						},
					},
					dataLabels: {
						enabled: false
					},
					stroke: {
						show: true,
						width: 2,
						colors: ['transparent']
					},
					xaxis: {
						categories: ["Ene", 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', "Nov", "Dic"],
					},
					yaxis: {
						title: {
							text: 'Cantidad de publicaciones'
						}
					},
					fill: {
						opacity: 1
					},
					tooltip: {
						y: {
							formatter: function (val) {
								return "" + val + " publicaciones"
							}
						}
					}
				};

				var chart = new ApexCharts(document.querySelector("#chart_1"), options);
				chart.render();

				$.ajax({
					url: '/APIReport/CollegeCareerReport',
					method: 'GET',
					success: function (datos) {
						var contador = {};
						datos.forEach(function (x) {
							data.forEach(function (y) {
								if (x.Name === y.Person.CollegeCareer.Name) {
									contador[y.Person.CollegeCareer.Name] = contador[y.Person.CollegeCareer.Name] === undefined || isNaN(contador[y.Person.CollegeCareer.Name]) ? 1 : contador[y.Person.CollegeCareer.Name] + 1;
								}
							});
						});
						const claves = Object.keys(contador);
						const valores = [];

						claves.forEach(clave => {
							valores.push(contador[clave]);
						});
						var options = {
							series: valores,
							chart: {
								type: 'pie',
								height: 350
							},
							labels: claves,
							tooltip: {
								y: {
									formatter: function (val) {
										return "" + val + " publicaciones"
									}
								}
							}
						};

						var chart = new ApexCharts(document.querySelector("#chart_2"), options);
						chart.render();

						$.ajax({
							url: '/APIReport/ExtensionReport',
							method: 'GET',
							success: function (datos) {
								var arreglo = []
								datos.forEach(function (x) {
									var contador = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
									data.forEach(y => {
										var objetoFecha = new Date(y.PublicationDate);
										var mes = objetoFecha.getMonth();
										if (x.Name === y.Person.Extension.Name) {
											contador[mes]++;
										}
									});
									arreglo.push({ name: x.Name, data: contador })
								});
								console.log(arreglo)
								var options = {
									series: arreglo,
									chart: {
										type: 'area',
										height: 350
									},
									plotOptions: {
										bar: {
											horizontal: false,
											columnWidth: '55%',
											endingShape: 'rounded'
										},
									},
									dataLabels: {
										enabled: false
									},
									stroke: {
										show: true,
										width: 2,
										colors: ['transparent']
									},
									xaxis: {
										categories: ["Ene", 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', "Nov", "Dic"],
									},
									yaxis: {
										title: {
											text: 'Cantidad de publicaciones'
										}
									},
									fill: {
										type: "solid", opacity: 1
									},

									tooltip: {
										y: {
											formatter: function (val) {
												return "" + val + " publicaciones"
											}
										}
									}
								};

								var chart = new ApexCharts(document.querySelector("#chart_3"), options);
								chart.render();
							},
							error: function () {
								console.log('Paila');
							}
						});

					},
					error: function () {
						console.log('Paila');
					}
				});
			},
			error: function () {
				console.log('Paila');
			}
		});
	}

</script>
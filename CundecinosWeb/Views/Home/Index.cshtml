@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@model CundecinosWeb.ViewModel.vPersonPublication

<input type="hidden" id="identity" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <!--begin::Toolbar-->
    <div class="toolbar" id="kt_toolbar">
        <!--begin::Container-->
        <div id="kt_toolbar_container" class="container-fluid d-flex flex-stack">
            <!--begin::Page title-->
            <div data-kt-swapper="true" data-kt-swapper-mode="prepend" data-kt-swapper-parent="{default: '#kt_content_container', 'lg': '#kt_toolbar_container'}" class="page-title d-flex align-items-center flex-wrap me-3 mb-5 mb-lg-0">
                <!--begin::Title-->
                <h1 class="d-flex align-items-center text-dark fw-bolder fs-3 my-1">
                    Bienvenido,
                    <!--begin::Separator-->
                    <span class="h-20px border-gray-200 border-start ms-3 mx-2"></span>
                    <!--end::Separator-->
                    <!--begin::Description-->
                    <small class="text-muted fs-7 fw-bold my-1 ms-1">@Model.Person.FirstName @Model.Person.LastName</small>
                    <!--end::Description-->
                </h1>
                <!--end::Title-->
            </div>
            <!--end::Page title-->
            <!--begin::Actions-->
            <div class="d-flex align-items-center py-1">
            </div>
            <!--end::Actions-->
        </div>
        <!--end::Container-->
    </div>
    <br />
    <!--end::Toolbar-->
    <!--begin::Post-->
    <div class="post d-flex flex-column-fluid" id="kt_post">
        <!--begin::Container-->
        <div id="kt_content_container" class="container-xxl">
            <!--begin::Row-->
            <div class="row gy-5 g-xl-8">
                <!--begin::Col-->
                <div class="col-xxl-4">
                    <!--begin::Mixed Widget 2-->
                    <div class="card card-xxl-stretch">
                        <!--begin::Header-->
                        <div class="card-header border-0 bg-danger py-5">
                            <h3 class="card-title fw-bolder text-white">Mis publicaciones</h3>
                            <div class="card-toolbar">
                                <!--begin::Menu-->
                                <!--begin::Menu 3-->
                                <!--end::Menu 3-->
                                <!--end::Menu-->
                            </div>
                        </div>
                        <!--end::Header-->
                        <!--begin::Body-->
                        <div class="card-body p-0">
                            <!--begin::Chart-->
                            <div id="chart_my_pub" class="card-rounded-bottom bg-danger" data-kt-color="danger" style="height: 200px"></div>
                            <!--end::Chart-->
                            <!--begin::Stats-->
                            <div class="card-p mt-n20 position-relative">
                                <!--begin::Row-->
                                <div class="row g-0">
                                    <!--begin::Col-->
                                    <div class="col bg-light-warning px-6 py-8 rounded-2 me-7 mb-7">
                                        <!--begin::Svg Icon | path: icons/duotune/general/gen032.svg-->
                                        <span class="svg-icon svg-icon-3x svg-icon-warning d-block my-2">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                <rect x="8" y="9" width="3" height="10" rx="1.5" fill="black" />
                                                <rect opacity="0.5" x="13" y="5" width="3" height="14" rx="1.5" fill="black" />
                                                <rect x="18" y="11" width="3" height="8" rx="1.5" fill="black" />
                                                <rect x="3" y="13" width="3" height="6" rx="1.5" fill="black" />
                                            </svg>
                                        </span>
                                        <!--end::Svg Icon-->
                                        <a href="#" class="text-warning fw-bold fs-6">Estadisticas</a>
                                    </div>
                                    <!--end::Col-->
                                    <!--begin::Col-->
                                    <div class="col bg-light-primary px-6 py-8 rounded-2 mb-7">
                                        <!--begin::Svg Icon | path: icons/duotune/finance/fin006.svg-->
                                        <span class="svg-icon svg-icon-3x svg-icon-primary d-block my-2">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                <path opacity="0.3" d="M20 15H4C2.9 15 2 14.1 2 13V7C2 6.4 2.4 6 3 6H21C21.6 6 22 6.4 22 7V13C22 14.1 21.1 15 20 15ZM13 12H11C10.5 12 10 12.4 10 13V16C10 16.5 10.4 17 11 17H13C13.6 17 14 16.6 14 16V13C14 12.4 13.6 12 13 12Z" fill="black" />
                                                <path d="M14 6V5H10V6H8V5C8 3.9 8.9 3 10 3H14C15.1 3 16 3.9 16 5V6H14ZM20 15H14V16C14 16.6 13.5 17 13 17H11C10.5 17 10 16.6 10 16V15H4C3.6 15 3.3 14.9 3 14.7V18C3 19.1 3.9 20 5 20H19C20.1 20 21 19.1 21 18V14.7C20.7 14.9 20.4 15 20 15Z" fill="black" />
                                            </svg>
                                        </span>
                                        <!--end::Svg Icon-->
                                        <a asp-controller="Publication" asp-action="Index" class="text-primary fw-bold fs-6">Nuevas Publicaciones</a>
                                    </div>
                                    <!--end::Col-->
                                </div>
                                <!--end::Row-->
                                <!--begin::Row-->
                                <div class="row g-0">
                                    <!--begin::Col-->
                                    <div class="col bg-light-danger px-6 py-8 rounded-2 me-7">
                                        <!--begin::Svg Icon | path: icons/duotune/abstract/abs027.svg-->
                                        <span class="svg-icon svg-icon-3x svg-icon-danger d-block my-2">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                <path opacity="0.3" d="M21.25 18.525L13.05 21.825C12.35 22.125 11.65 22.125 10.95 21.825L2.75 18.525C1.75 18.125 1.75 16.725 2.75 16.325L4.04999 15.825L10.25 18.325C10.85 18.525 11.45 18.625 12.05 18.625C12.65 18.625 13.25 18.525 13.85 18.325L20.05 15.825L21.35 16.325C22.35 16.725 22.35 18.125 21.25 18.525ZM13.05 16.425L21.25 13.125C22.25 12.725 22.25 11.325 21.25 10.925L13.05 7.62502C12.35 7.32502 11.65 7.32502 10.95 7.62502L2.75 10.925C1.75 11.325 1.75 12.725 2.75 13.125L10.95 16.425C11.65 16.725 12.45 16.725 13.05 16.425Z" fill="black" />
                                                <path d="M11.05 11.025L2.84998 7.725C1.84998 7.325 1.84998 5.925 2.84998 5.525L11.05 2.225C11.75 1.925 12.45 1.925 13.15 2.225L21.35 5.525C22.35 5.925 22.35 7.325 21.35 7.725L13.05 11.025C12.45 11.325 11.65 11.325 11.05 11.025Z" fill="black" />
                                            </svg>
                                        </span>
                                        <!--end::Svg Icon-->
                                        <a href="#" class="text-danger fw-bold fs-6 mt-2">Restaurante</a>
                                    </div>
                                    <!--end::Col-->
                                    <!--begin::Col-->
                                    <div class="col bg-light-success px-6 py-8 rounded-2">
                                        <!--begin::Svg Icon | path: icons/duotune/communication/com010.svg-->
                                        <span class="svg-icon svg-icon-3x svg-icon-success d-block my-2">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                <path d="M6 8.725C6 8.125 6.4 7.725 7 7.725H14L18 11.725V12.925L22 9.725L12.6 2.225C12.2 1.925 11.7 1.925 11.4 2.225L2 9.725L6 12.925V8.725Z" fill="black" />
                                                <path opacity="0.3" d="M22 9.72498V20.725C22 21.325 21.6 21.725 21 21.725H3C2.4 21.725 2 21.325 2 20.725V9.72498L11.4 17.225C11.8 17.525 12.3 17.525 12.6 17.225L22 9.72498ZM15 11.725H18L14 7.72498V10.725C14 11.325 14.4 11.725 15 11.725Z" fill="black" />
                                            </svg>
                                        </span>
                                        <!--end::Svg Icon-->
                                        <a href="#" class="text-success fw-bold fs-6 mt-2">Reporte de Bugs</a>
                                    </div>
                                    <!--end::Col-->
                                </div>
                                <!--end::Row-->
                            </div>
                            <!--end::Stats-->
                        </div>
                        <!--end::Body-->
                    </div>
                    <!--end::Mixed Widget 2-->
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-xxl-4">
                    <!--begin::List Widget 5-->
                    <div class="card card-xxl-stretch">
                        <!--begin::Header-->
                        <div class="card-header align-items-center border-0 mt-4">
                            <h3 class="card-title align-items-start flex-column">
                                <span class="fw-bolder mb-2 text-dark">Título de publicaciones</span>

                            </h3>
                            <div class="card-toolbar">
                                <!--begin::Menu-->
                                <!--end::Menu 1-->
                                <!--end::Menu-->
                            </div>
                        </div>
                        <!--end::Header-->
                        <!--begin::Body-->
                        <div class="card-body pt-5">
                            <!--begin::Timeline-->
                            <div class="timeline-label">
                                <!--begin::Item-->
                                @foreach (var itemPublication in Model.PublicationUsers.OrderByDescending(x => x.PublicationDate))
                                {
                                    <div class="timeline-item">
                                        <!--begin::Label-->
                                        <div class="timeline-label fw-bolder text-gray-800 fs-6">@itemPublication.PublicationDate.ToShortDateString()</div>
                                        <!--end::Label-->
                                        <!--begin::Badge-->
                                        <div class="timeline-badge">
                                            @*<i class="fa fa-genderless text-warning fs-1"></i>*@
                                            <i class="fa fa-genderless text-success fs-1"></i>
                                        </div>
                                        <!--end::Badge-->
                                        <!--begin::Text-->
                                        <div class="fw-mormal timeline-content text-muted ps-3">@itemPublication.Qualification</div>
                                        <!--end::Text-->
                                    </div>
                                }

                            </div>
                            <!--end::Timeline-->
                        </div>
                        <!--end: Card Body-->
                    </div>
                    <!--end: List Widget 5-->
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-xxl-4">
                    <!--begin::Mixed Widget 7-->
                    <div class="card card-xxl-stretch-50 mb-5 mb-xl-8">
                        <!--begin::Body-->
                        <div class="card-body d-flex flex-column p-0">
                            <!--begin::Stats-->
                            <div class="flex-grow-1 card-p pb-0">
                                <div class="d-flex flex-stack flex-wrap">
                                    <div class="me-2">
                                        <a href="#" class="text-dark text-hover-primary fw-bolder fs-3">Publicaciones Realizadas</a>

                                    </div>
                                    <div class="fw-bolder fs-3 text-primary">@Model.PublicationUsers.Count</div>
                                </div>
                            </div>
                            <!--end::Stats-->
                            <!--begin::Chart-->
                            <div id="chart_pub_sedes" class="card-rounded-bottom" data-kt-chart-color="primary" style="height: 150px"></div>
                            <!--end::Chart-->
                        </div>
                        <!--end::Body-->
                    </div>
                    <!--end::Mixed Widget 7-->

                </div>
                <!--end::Col-->
            </div>
            <!--end::Row-->
            <!--begin::Row-->

        </div>
        <!--end::Container-->
    </div>
    <!--end::Post-->
</div>

<script>
    $(document).ready(function () {
        var idUsuario = document.getElementById('identity')
        const url = `/APIReport/PublicationReportUser/?identity=${encodeURIComponent(idUsuario.value)}`;
        $.ajax({
            url: url,
            method: 'GET',
            success: function (datos) {
                var counts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                datos.forEach(x => {
                    var objetoFecha = new Date(x.PublicationDate);
                    var mes = objetoFecha.getMonth();
                    counts[mes]++;
                });
                var options = {
                    series: [
                        {name:'',data: counts },
                    ],
                    chart: {
                        fontFamily: "inherit",
                        type: "area",
                        height: 200,
                        toolbar: { show: !1 },
                        zoom: { enabled: !1 },
                        sparkline: { enabled: !0 },
                        dropShadow: {
                            enabled: !0,
                            enabledOnSeries: void 0,
                            top: 5,
                            left: 0,
                            blur: 3,
                            color: '#B20034',
                            opacity: 0.5,
                        },
                    },
                    plotOptions: {},
                    legend: { show: !1 },
                    dataLabels: { enabled: !1 },
                    fill: { type: "solid", opacity: 0 },
                    stroke: { curve: "smooth", show: !0, width: 3, colors: ['#C9023C'] }
                    ,
                    xaxis: {
                        categories: ["Ene","Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug","Sept","Oct","Nov","Dic"],
                        axisBorder: { show: !1 },
                        axisTicks: { show: !1 },
                        labels: { show: !1, style: { colors: '#CF577A', fontSize: "12px" } },
                        crosshairs: {
                            show: !1,
                            position: "front",
                            stroke: { color: '#B50136', width: 1, dashArray: 3 },
                        },
                    },
                    yaxis: {
                        labels: { show: !1, style: { colors: ['#C9023C'], fontSize: "12px" } },
                    },
                    states: {
                        normal: { filter: { type: "none", value: 0 } },
                        hover: { filter: { type: "none", value: 0 } },
                        active: {
                            allowMultipleDataPointsSelection: !1,
                            filter: { type: "none", value: 0 },
                        },
                    },
                    tooltip: {
                        style: { fontSize: "12px" },
                        y: {
                            formatter: function (e) {
                                return "" + e + " publicaciones";
                            },
                        },
                        marker: { show: !1 },
                    },
                    colors: ["transparent"],
                    markers: { colors: ['#D9214E'], strokeColor: ['#C9023C'], strokeWidth: 3 },

                };

                var chart = new ApexCharts(document.querySelector("#chart_my_pub"), options);
                chart.render();
            },
            error: function () {
                console.log('Error');
            }
        });
        $.ajax({
            url: '/APIReport/PublicationReport',
            method: 'GET',
            success: function (data) {
                const publicacionesPorMes = data.reduce((result, publicacion) => {
                    const mes = new Date(publicacion.PublicationDate).getMonth(); // Obtener el mes (0-11)
                    const tipoPublicacion = publicacion.PublicationType === 20 ? "trueque" : "venta"; // Obtener el tipo de publicación
                    // Crear objeto mes si no existe
                    result[mes] = result[mes] || {};
                    // Incrementar contador del tipo de publicación
                    result[mes][tipoPublicacion] = (result[mes][tipoPublicacion] || 0) + 1;
                    return result;
                }, {});
                // Crear arreglo con dos objetos, uno para cada tipo de publicación
                const resultado = [
                    {
                        name: "trueque",
                        data: Array(12).fill(0).map((_, i) => publicacionesPorMes[i]?.trueque || 0)
                    },
                    {
                        name: "venta",
                        data: Array(12).fill(0).map((_, i) => publicacionesPorMes[i]?.venta || 0)
                    }
                ];
                var options = {
                    series: resultado,
                    chart: {
                        type: 'area',
                        height: 200,
                        toolbar: { show: !1 },
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: ["Ene", 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', "Nov", "Dic"],
                        axisBorder: { show: !1 },
                        axisTicks: { show: !1 },
                        labels: { show: 1, style: { colors: '#CF577A', fontSize: "12px" } },
                    },
                    yaxis: {
                        axisBorder: { show: !1 },
                        axisTicks: { show: !1 },
                        labels: { show: !1, style: { colors: '#CF577A', fontSize: "5px" } },
                    },
                    fill: {
                        type: "solid", opacity: 0.9
                    },

                    tooltip: {
                        y: {
                            formatter: function (val) {
                                return "" + val + " publicaciones"
                            }
                        },
                        style: { fontSize: "12px" },
                    }
                };

                var chart = new ApexCharts(document.querySelector("#chart_pub_sedes"), options);
                chart.render();
            },
            error: function () {
                console.log('Error');
            }
        });
    });
</script>